package CodeSprint;
import java.util.*;

public class TransactionCertificates {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int p = in.nextInt();
        long m = in.nextLong();
        
        String str = findTransactions(n, k, p, m);
        String[] ans = str.split("-");
        if(ans.length > 3){
        	
        	
        	
        }
        in.close();
    }
    
    public static String findTransactions(int n, int Kvalue, int p, long m){
    	
    	Map<Double, String> map = new HashMap<Double, String>();
    	for (int i = 0; i< n; i++){
    		
    		for(int j = i+1; j<n; j++){
    			
    			for(int k1 =1; k1 <= Kvalue; k1++){
    				
    				for(int k2 = 1; k2 <= Kvalue; k2++){
    					
    					// calculate the value for 2 variables
    					double val1 = k1 * (double) Math.pow(p, n-1-i);
    					double val2 = k2 * (double) Math.pow(p, n-1-j);
    					double val = val1 + val2;
    					
    					if(map.containsKey(val)){
    						return (map.get(val) +"-"+ k1 +"-"+k2);
    					}
    					map.put(val, k1+"-"+k2+ "$"+i+"-"+j);
    				}
    				
    			}
    			
    		}
    		
    	}
    	return "";    	
    	
    }
}