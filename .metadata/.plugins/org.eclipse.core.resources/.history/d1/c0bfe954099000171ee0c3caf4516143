package com.Leetcode;

import java.util.*;

public class LongestPairChain {

	public static void main(String[] args) {

	}

	public int findLongestChain(int[][] pairs) {
		int count = 0;
		sortArray(pairs);
		int len = pairs.length;
		int[] sol = new int [pairs.length];
		for(int i =0; i< pairs.length; i++){
			sol[i] = 1;
			int start = pairs[i][0];
			int end = pairs[i][1];
			for(int j = i-1; j >= 0; j--){
				
				int startJ = pairs[j][0];
				int endJ = pairs[j][1];
				if(start > endJ){
					sol[i] = Math.max(sol[i], sol[j] +1);
				}
				
			}
			
			count = Math.max(count, sol[i]);
			
		}
		
		for()

		return count;

	}
	
	
	public static void sortArray(int[][] pairs){
		 Arrays.sort(pairs, new Comparator<int[]>(){
				
			 public int compare(int[] arr1, int[] arr2){
				 
				 if(arr1[0] > arr2[0])
					 return 1;
				 else if(arr1[0] < arr2[0])
					 return -1;
				 else{
					 if(arr1[1] > arr2[1])
						 return 1;
					 
					 return -1;
				 }
 
			 }	
			
		});
	}

}
